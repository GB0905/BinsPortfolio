// querydsl 추가 1
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// 스프링 부트 시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// 스프링 부트 밸리데이션
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// 타임리프 레이아웃 책 p.133
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.3.0'
	// 타임리프 스프링 시큐리티
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.2.RELEASE'
	// ModelMapper
	implementation 'org.modelmapper:modelmapper:3.2.0'

	// 스프링 시큐리티 테스트
	testImplementation 'org.springframework.security:spring-security-test:6.1.5'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'com.openhtmltopdf:openhtmltopdf-pdfbox:1.0.10'
	implementation 'org.jsoup:jsoup:1.15.3'
	implementation 'org.xhtmlrenderer:flying-saucer-pdf-openpdf:9.1.11'
	implementation 'com.itextpdf:itext7-core:7.2.3'
	implementation 'com.itextpdf:html2pdf:4.0.3'

	// querydsl 추가 2
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor(
			"jakarta.persistence:jakarta.persistence-api",
			"jakarta.annotation:jakarta.annotation-api",
			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")
}

tasks.named('test') {
	useJUnitPlatform()
}

// querydsl 추가 3
sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
		}
	}
}

compileJava.dependsOn('clean')